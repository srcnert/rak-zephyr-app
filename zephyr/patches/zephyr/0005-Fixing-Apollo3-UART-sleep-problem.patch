From 0fb7ddf7c92563ffe7a48fa6da3eaed8727cddfc Mon Sep 17 00:00:00 2001
From: srcnert <sercanerat@gmail.com>
Date: Mon, 1 Sep 2025 23:38:32 +0300
Subject: [PATCH] Fixing Apollo3 UART sleep problem

---
 drivers/pinctrl/pinctrl_ambiq.c               | 39 +++++++++++--------
 drivers/serial/uart_pl011.c                   | 20 ----------
 drivers/serial/uart_pl011_ambiq.h             |  6 +++
 drivers/serial/uart_pl011_registers.h         | 20 ++++++++++
 .../pinctrl/ambiq,apollo3-pinctrl.yaml        |  2 +-
 soc/ambiq/apollo3x/pinctrl_soc.h              |  3 ++
 6 files changed, 53 insertions(+), 37 deletions(-)

diff --git a/drivers/pinctrl/pinctrl_ambiq.c b/drivers/pinctrl/pinctrl_ambiq.c
index b6c3e9ff676..a10877db737 100644
--- a/drivers/pinctrl/pinctrl_ambiq.c
+++ b/drivers/pinctrl/pinctrl_ambiq.c
@@ -14,25 +14,32 @@ static void pinctrl_configure_pin(const pinctrl_soc_pin_t *pin)
 	am_hal_gpio_pincfg_t pin_config = {0};
 
 #if defined(CONFIG_SOC_SERIES_APOLLO3X)
-	pin_config.uFuncSel = pin->alt_func;
-	pin_config.eGPInput =
-		pin->input_enable ? AM_HAL_GPIO_PIN_INPUT_ENABLE : AM_HAL_GPIO_PIN_INPUT_NONE;
-	pin_config.eGPOutcfg = pin->push_pull    ? AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL
-			       : pin->open_drain ? AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN
-			       : pin->tristate   ? AM_HAL_GPIO_PIN_OUTCFG_TRISTATE
-						 : AM_HAL_GPIO_PIN_OUTCFG_DISABLE;
-	pin_config.eDriveStrength = pin->drive_strength;
-	pin_config.uNCE = pin->nce;
-	pin_config.eCEpol = pin->nce_pol;
+	if(pin->low_power_enable == 0) {
+		pin_config.uFuncSel = pin->alt_func;
+		pin_config.eGPInput =
+			pin->input_enable ? AM_HAL_GPIO_PIN_INPUT_ENABLE : AM_HAL_GPIO_PIN_INPUT_NONE;
+		pin_config.eGPOutcfg = pin->push_pull    ? AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL
+					: pin->open_drain ? AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN
+					: pin->tristate   ? AM_HAL_GPIO_PIN_OUTCFG_TRISTATE
+							: AM_HAL_GPIO_PIN_OUTCFG_DISABLE;
+		pin_config.eDriveStrength = pin->drive_strength;
+		pin_config.uNCE = pin->nce;
+		pin_config.eCEpol = pin->nce_pol;
 #if defined(CONFIG_SOC_APOLLO3P_BLUE)
-	pin_config.bIomMSPIn = pin->iom_mspi;
+		pin_config.bIomMSPIn = pin->iom_mspi;
 #endif
-	pin_config.uIOMnum = pin->iom_num;
+		pin_config.uIOMnum = pin->iom_num;
 
-	if (pin->bias_pull_up) {
-		pin_config.ePullup = pin->ambiq_pull_up_ohms + AM_HAL_GPIO_PIN_PULLUP_1_5K;
-	} else if (pin->bias_pull_down) {
-		pin_config.ePullup = AM_HAL_GPIO_PIN_PULLDOWN;
+		if (pin->bias_pull_up) {
+			pin_config.ePullup = pin->ambiq_pull_up_ohms + AM_HAL_GPIO_PIN_PULLUP_1_5K;
+		} else if (pin->bias_pull_down) {
+			pin_config.ePullup = AM_HAL_GPIO_PIN_PULLDOWN;
+		}
+	}
+	else {
+		pin_config.uFuncSel = 3;
+		pin_config.eDriveStrength = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA;
+		pin_config.eGPOutcfg = AM_HAL_GPIO_PIN_OUTCFG_DISABLE;
 	}
 #else
 	pin_config.GP.cfg_b.uFuncSel = pin->alt_func;
diff --git a/drivers/serial/uart_pl011.c b/drivers/serial/uart_pl011.c
index 624ae45f5c5..4bdf0849100 100644
--- a/drivers/serial/uart_pl011.c
+++ b/drivers/serial/uart_pl011.c
@@ -46,26 +46,6 @@
 
 #include "uart_pl011_raspberrypi_pico.h"
 
-struct pl011_config {
-	DEVICE_MMIO_ROM;
-#if defined(CONFIG_PINCTRL)
-	const struct pinctrl_dev_config *pincfg;
-#endif
-#if defined(CONFIG_RESET)
-	const struct reset_dt_spec reset;
-#endif
-#if defined(CONFIG_CLOCK_CONTROL)
-	const struct device *clock_dev;
-	clock_control_subsys_t clock_id;
-#endif
-#ifdef CONFIG_UART_INTERRUPT_DRIVEN
-	uart_irq_config_func_t irq_config_func;
-#endif
-	bool fifo_disable;
-	int (*clk_enable_func)(const struct device *dev, uint32_t clk);
-	int (*pwr_on_func)(void);
-};
-
 /* Device data structure */
 struct pl011_data {
 	DEVICE_MMIO_RAM;
diff --git a/drivers/serial/uart_pl011_ambiq.h b/drivers/serial/uart_pl011_ambiq.h
index 6db7e297db4..3836d90d86d 100644
--- a/drivers/serial/uart_pl011_ambiq.h
+++ b/drivers/serial/uart_pl011_ambiq.h
@@ -83,6 +83,8 @@ static int uart_ambiq_pm_action(const struct device *dev, enum pm_device_action
 {
 	int key;
 
+	const struct pl011_config *config = dev->config;
+
 	/*Uart module number*/
 	uint32_t ui32Module = ((uint32_t)get_uart(dev) == UART0_BASE) ? 0 : 1;
 
@@ -112,6 +114,8 @@ static int uart_ambiq_pm_action(const struct device *dev, enum pm_device_action
 		/* Enable power control.*/
 		am_hal_pwrctrl_periph_enable(eUARTPowerModule);
 
+		pinctrl_apply_state(config->pincfg, PINCTRL_STATE_DEFAULT);
+
 		/* Restore UART registers*/
 		key = irq_lock();
 
@@ -159,6 +163,8 @@ static int uart_ambiq_pm_action(const struct device *dev, enum pm_device_action
 		 */
 		UARTn(ui32Module)->CR = 0;
 
+		pinctrl_apply_state(config->pincfg, PINCTRL_STATE_SLEEP);
+
 		/* Disable power control.*/
 		am_hal_pwrctrl_periph_disable(eUARTPowerModule);
 		return 0;
diff --git a/drivers/serial/uart_pl011_registers.h b/drivers/serial/uart_pl011_registers.h
index a46509e18b6..7a02ab04930 100644
--- a/drivers/serial/uart_pl011_registers.h
+++ b/drivers/serial/uart_pl011_registers.h
@@ -11,6 +11,26 @@
 
 #include <zephyr/device.h>
 
+struct pl011_config {
+	DEVICE_MMIO_ROM;
+#if defined(CONFIG_PINCTRL)
+	const struct pinctrl_dev_config *pincfg;
+#endif
+#if defined(CONFIG_RESET)
+	const struct reset_dt_spec reset;
+#endif
+#if defined(CONFIG_CLOCK_CONTROL)
+	const struct device *clock_dev;
+	clock_control_subsys_t clock_id;
+#endif
+#ifdef CONFIG_UART_INTERRUPT_DRIVEN
+	uart_irq_config_func_t irq_config_func;
+#endif
+	bool fifo_disable;
+	int (*clk_enable_func)(const struct device *dev, uint32_t clk);
+	int (*pwr_on_func)(void);
+};
+
 /*
  * UART PL011 register map structure
  */
diff --git a/dts/bindings/pinctrl/ambiq,apollo3-pinctrl.yaml b/dts/bindings/pinctrl/ambiq,apollo3-pinctrl.yaml
index 5093122303f..3510fc17072 100644
--- a/dts/bindings/pinctrl/ambiq,apollo3-pinctrl.yaml
+++ b/dts/bindings/pinctrl/ambiq,apollo3-pinctrl.yaml
@@ -66,7 +66,7 @@ child-binding:
           - bias-high-impedance
           - bias-pull-up
           - bias-pull-down
-
+          - low-power-enable
     properties:
       pinmux:
         required: true
diff --git a/soc/ambiq/apollo3x/pinctrl_soc.h b/soc/ambiq/apollo3x/pinctrl_soc.h
index f3f562ae802..a341cc3a150 100644
--- a/soc/ambiq/apollo3x/pinctrl_soc.h
+++ b/soc/ambiq/apollo3x/pinctrl_soc.h
@@ -41,6 +41,8 @@ struct apollo3_pinctrl_soc_pin {
 	uint32_t iom_num: 3;
 	/** nCE module polarity */
 	uint32_t nce_pol: 1;
+	/** Set the pin for low power mode */
+	uint32_t low_power_enable: 1;
 };
 
 typedef struct apollo3_pinctrl_soc_pin pinctrl_soc_pin_t;
@@ -68,6 +70,7 @@ typedef struct apollo3_pinctrl_soc_pin pinctrl_soc_pin_t;
 		DT_PROP(node_id, ambiq_iom_mspi),                                                  \
 		DT_PROP(node_id, ambiq_iom_num),                                                   \
 		DT_PROP(node_id, ambiq_nce_pol),                                                   \
+		DT_PROP(node_id, low_power_enable),                                                \
 	},
 
 /**
-- 
2.39.5 (Apple Git-154)

